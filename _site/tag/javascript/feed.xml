<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="https://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="http://localhost:4000/tag/javascript/feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:4000/" rel="alternate" type="text/html" />
  <updated>2023-01-16T19:18:38-07:00</updated>
  <id>http://localhost:4000/tag/javascript/feed.xml</id>

  
  
  

  
    <title type="html">Julia Hack | </title>
  

  
    <subtitle>Web development blog</subtitle>
  

  

  
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
  

  
  

  
    <entry>
      <title type="html">Notes about the DOM</title>
      <link href="http://localhost:4000/DOM-notes" rel="alternate" type="text/html" title="Notes about the DOM" />
      <published>2022-10-31T18:30:00-06:00</published>
      <updated>2022-10-31T18:30:00-06:00</updated>
      <id>http://localhost:4000/DOM-notes</id>
      <content type="html" xml:base="http://localhost:4000/DOM-notes">&lt;p&gt;As I mentioned in my last post, I’ve been getting back into my JavaScript course on Udemy called “The Complete JavaScript Course 2022: From Zero to Expert”.&lt;/p&gt;

&lt;p&gt;Here is a messy post with notes about the DOM. It’s really just a quick reference for myself. I added a few notes from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model&quot;&gt;this reference on MDN&lt;/a&gt; as well.&lt;/p&gt;

&lt;p&gt;The DOM is where JavaScript interacts with the browser (or, HTML documents rendered in the browser). It is an API with lots of built in methods and properties. We can use JavaScript to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;create, update, delete HTML elements&lt;/li&gt;
  &lt;li&gt;set styles, classes, attributes&lt;/li&gt;
  &lt;li&gt;listen and respond to events&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can do all of this because a &lt;strong&gt;DOM tree&lt;/strong&gt; is generated from the HTML document&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a DOM tree is made out of nodes&lt;/li&gt;
  &lt;li&gt;these include things like addEventListener, createElement, querySelector, .innerHTML&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are different types of DOM nodes&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;including HTML elements, text&lt;/li&gt;
  &lt;li&gt;every node is of type &lt;strong&gt;node&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;node type is like a base class that its children are based off&lt;/li&gt;
  &lt;li&gt;nodes are represented by JavaScript objects, which include different methods and properties&lt;/li&gt;
  &lt;li&gt;children of the &lt;strong&gt;node type&lt;/strong&gt; include: element, text, comment, document&lt;/li&gt;
  &lt;li&gt;everything in the HTML, including comments, has to go in the DOM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Inheritence&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;all child types get access to their parents’ properties and methods, including the node type&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;about-the-different-types-of-nodes&quot;&gt;About the different types of nodes&lt;/h3&gt;

&lt;p&gt;Document type&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the root of the dom tree&lt;/li&gt;
  &lt;li&gt;includes methods like querySelector(), createElement(), etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Element type&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;base class for HTML elements&lt;/li&gt;
  &lt;li&gt;its child type is HTMLElement, which has other child types for each type of element that exists in HTML, like buttons, divs, images, etc&lt;/li&gt;
  &lt;li&gt;this is because different HTML elements have different attributes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;EventTarget&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;any object that may have an event listener on it&lt;/li&gt;
  &lt;li&gt;is a parent to the node type, and window type&lt;/li&gt;
  &lt;li&gt;meaning you can call addEventListener() on every type of node&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Window type&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;this is a global object, on the same level as node type&lt;/li&gt;
  &lt;li&gt;represents the window that JavaScript is running in&lt;/li&gt;
  &lt;li&gt;has its own methods and properties, including some familiar ones like window.scroll(), .location(), .innerHeight(), etc&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name></name>
        
        
      </author>

      

      
        <category term="JavaScript" />
      
        <category term="dom" />
      

      
        <summary type="html">As I mentioned in my last post, I’ve been getting back into my JavaScript course on Udemy called “The Complete JavaScript Course 2022: From Zero to Expert”.</summary>
      

      
      
    </entry>
  
</feed>
