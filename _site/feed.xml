<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-06-08T15:43:30-06:00</updated><id>http://localhost:4000/</id><title type="html">Julia Hack</title><subtitle>Web development blog</subtitle><entry><title type="html">‘There is already an object named ___ in the database’ and ‘Column names in each table must be unique’</title><link href="http://localhost:4000/database-error" rel="alternate" type="text/html" title="'There is already an object named ___ in the database' and 'Column names in each table must be unique'" /><published>2020-06-08T12:30:00-06:00</published><updated>2020-06-08T12:30:00-06:00</updated><id>http://localhost:4000/database-error</id><content type="html" xml:base="http://localhost:4000/database-error">&lt;p&gt;There were migrations performed on our application at work this week, which meant my database was out of date and the application would not load on my local machine.&lt;/p&gt;

&lt;p&gt;I’ll do my best to explain without using any data/table names/etc from my work application.&lt;/p&gt;

&lt;p&gt;In package-manager console in Visual Studio I ran “update-database”, and received the following error when it tried to run the migrations on my database:&lt;/p&gt;

&lt;h4 id=&quot;there-is-already-an-object-named-___-in-the-database&quot;&gt;“There is already an object named ___ in the database”&lt;/h4&gt;

&lt;p&gt;Right away this time I asked a coworker if she also had that error. She told me I should drop the above-mentioned table, which I will refer to as Table1, and gave me more instructions. I will outline the process below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;opened SQL Server Management Studio&lt;/li&gt;
  &lt;li&gt;Databases&lt;/li&gt;
  &lt;li&gt;*mydatabasename&lt;/li&gt;
  &lt;li&gt;Tables&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There was another important related table, which I’ll call Table2. In here I had to go to the Keys section and delete all the keys related to Table1.&lt;/p&gt;

&lt;p&gt;Then,&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;go back to Table1&lt;/li&gt;
  &lt;li&gt;right click&lt;/li&gt;
  &lt;li&gt;Script table as&lt;/li&gt;
  &lt;li&gt;DELETE to&lt;/li&gt;
  &lt;li&gt;New query window&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the new query window I deleted the line that said,&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;WHERE &amp;lt;Search Conditions&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;then executed the query. This deletes the contents. You need to do this BEFORE you drop the table.&lt;/p&gt;

&lt;p&gt;Dropping the table:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;right click Table1 again&lt;/li&gt;
  &lt;li&gt;Script table as&lt;/li&gt;
  &lt;li&gt;DROP to&lt;/li&gt;
  &lt;li&gt;New query window&lt;/li&gt;
  &lt;li&gt;execute this query, which drops Table1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I went to update database again, but I got a new error:&lt;/p&gt;

&lt;h4 id=&quot;column-names-in-each-table-must-be-unique-column-name-___-in-table2-is-specified-more-than-once&quot;&gt;“Column names in each table must be unique. Column name ___ in Table2 is specified more than once”&lt;/h4&gt;

&lt;p&gt;These were &lt;em&gt;column names&lt;/em&gt; that were related to Table1. I already got rid of the &lt;em&gt;keys&lt;/em&gt; that were related to Table1, but not columns. So I deleted those as well, went back to Visual Studio and tried update-database again.&lt;/p&gt;

&lt;p&gt;This time it worked with no error and I was able to open my application.&lt;/p&gt;</content><author><name></name></author><category term="database" /><category term="sql" /><category term="dotnet" /><category term="migrations" /><summary type="html">There were migrations performed on our application at work this week, which meant my database was out of date and the application would not load on my local machine.</summary></entry><entry><title type="html">When Sourcetree didn’t work - ‘fatal: authentication failed’ error</title><link href="http://localhost:4000/sourcetree-authentication-error" rel="alternate" type="text/html" title="When Sourcetree didn't work - 'fatal: authentication failed' error" /><published>2020-06-05T12:30:00-06:00</published><updated>2020-06-05T12:30:00-06:00</updated><id>http://localhost:4000/sourcetree-authentication-error</id><content type="html" xml:base="http://localhost:4000/sourcetree-authentication-error">&lt;p&gt;I know I shouldn’t feel incompetent every time I struggle with some kind of error or bug; dealing with frustration comes with being a developer, and I chose this. This issue, however, frustrated me more than I care to admit.&lt;/p&gt;

&lt;p&gt;This week I had to change the password on my work PC. Something I believe I have done many times before with no consequences.&lt;/p&gt;

&lt;p&gt;A few days later I wanted to push some code in Sourcetree. Before commiting my changes I needed to do a pull. When I did so, I got the following error:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/sourcetree-error.jpg&quot; style=&quot;max-width: 500px;&quot; alt=&quot;sourcetree error message&quot; /&gt;&lt;/p&gt;

&lt;p&gt;“fatal: Authentication failed for …”, plus a message from git at the top.&lt;/p&gt;

&lt;p&gt;Seeing “authentication” made me think it was probably due to changing my password. I logged into our remote Bitbucket server with the new password. That worked fine. I came back to Sourcetree. Same error occured. I exited and reopened the program. Same error when I try to pull.&lt;/p&gt;

&lt;p&gt;I started asking coworkers and searching online for solutions. There was actually a solution on the &lt;a href=&quot;https://community.atlassian.com/t5/Sourcetree-questions/Getting-quot-fatal-Authentication-failed-for-quot-error/qaq-p/624663&quot;&gt;Atlassian community forum&lt;/a&gt; that involved navigating from C: -&amp;gt; User -&amp;gt; [myusername] -&amp;gt; AppData -&amp;gt; Local -&amp;gt; Atlassian -&amp;gt; Sourcetree and finding the “passwd” file, and deleting it. You should then be prompted to input your updated password. Great!&lt;/p&gt;

&lt;p&gt;I got stuck on “AppData” which was conveniently not showing up in the folder where I was expecting it. I figured this was because I was using a work PC, and I didn’t have this folder, or perhaps lacked proper permissions. I kept looking for other solutions, getting suggestions from coworkers, and nothing worked.&lt;/p&gt;

&lt;p&gt;A coworker also suggested the above solution. Once again I could not find the AppData file.  This time, though, I decided to just search for “passwd” in the search bar for C drive. And the file showed up with the file path shown above. For whatever reason I couldn’t see it in the other view in file explorer.&lt;/p&gt;

&lt;p&gt;I deleted this file and tried to pull again. A modal popped up asking for my new password. This time the pull worked, no errors. Of course it did.&lt;/p&gt;

&lt;p&gt;I don’t think there is a moral to this story. I’ll just use this post in the future as instructions for when I inevitably deal with this error again.&lt;/p&gt;

&lt;p&gt;Yeah, let’s just go with that.&lt;/p&gt;</content><author><name></name></author><category term="version-control" /><summary type="html">I know I shouldn’t feel incompetent every time I struggle with some kind of error or bug; dealing with frustration comes with being a developer, and I chose this. This issue, however, frustrated me more than I care to admit.</summary></entry><entry><title type="html">Learning about databases in Udemy course</title><link href="http://localhost:4000/learning-about-databases" rel="alternate" type="text/html" title="Learning about databases in Udemy course" /><published>2020-05-30T18:30:00-06:00</published><updated>2020-05-30T18:30:00-06:00</updated><id>http://localhost:4000/learning-about-databases</id><content type="html" xml:base="http://localhost:4000/learning-about-databases">&lt;p&gt;I often feel I need to drill this information into my head a few times before I really get it, so here are some more notes with basic definitions surrounding databases.&lt;/p&gt;

&lt;p&gt;These notes are from the database section of my Web Developer Bootcamp Udemy course, and also include some of my own notes about connecting to MongoDB Atlas.&lt;/p&gt;

&lt;h3 id=&quot;database&quot;&gt;Database&lt;/h3&gt;

&lt;p&gt;A collection of information or data that you access using an interface - not just any file with information. An interface here means that you use code to interact with the database.&lt;/p&gt;

&lt;p&gt;For example, SQL is an interface to some databases.&lt;/p&gt;

&lt;h3 id=&quot;relationalsql-vs-non-relationalno-sql-databases&quot;&gt;Relational(SQL) vs. non-relational(No-SQL) databases&lt;/h3&gt;

&lt;p&gt;Relational databases are “tabular” databases and are considered flat. You have to define what your tables look like first, and the relationships between the tables. You define relationships by creating a new table, called a join table. Relational databases are not very flexible if you want to make changes later.&lt;/p&gt;

&lt;p&gt;For non-relational databases you don’t have to define these patterns ahead of time, so they are more flexible. There are no tables. They can have nested data so are therefore not flat.&lt;/p&gt;

&lt;h3 id=&quot;mongodb-and-mongoose&quot;&gt;MongoDB and Mongoose&lt;/h3&gt;

&lt;p&gt;We are using MongoDB in the Udemy course, and we used it in my certificate program as well. That ‘s because it is currently the most popular database to use with Node.js. In class we used MongoDB Atlas, which is a cloud-based system for storing your data with MongoDB. You can also set up MongoDB on your machine and interact with it using the command line. There are many articles on how to set this up, and I didn’t want to go through all those steps since I already have a good system in place with Atlas. You can see the &lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows/&quot;&gt;MongoDB docs&lt;/a&gt; and this &lt;a href=&quot;https://www.freecodecamp.org/news/learn-mongodb-a4ce205e7739/&quot;&gt;freeCodeCamp article&lt;/a&gt; for set up.&lt;/p&gt;

&lt;p&gt;We are also using the Mongoose library to model our javascript objects. Mongoose uses schemas, like below:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//create your schema&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;campgroundSchema&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//use your schema to model what data a Campground object will include - needs to start with a capital letter &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Campground&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Campground&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;campgroundSchema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//create a new campground&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Campground&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Granite Hill&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://i.picsum.photos/id/654/200/300.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;campground&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Newly created campground&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;campground&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Even though you are defining name and image in your schema, it is not set in stone; you can modify it later, unlike tables in relational databases.&lt;/p&gt;

&lt;p&gt;The following is what I use to connect to mongoose and my database:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//connecting to mongoose&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DB_CONNECTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;useUnifiedTopology&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;useNewUrlParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//define db&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//error handling and letting us know if we are connected to our database&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Error connecting to mongoose&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;once&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;open&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Connected to the database&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The part with “process.env.DB_CONNECTION” is how I connect to my database in the cloud. In my code I also have a .env file, which is included in my .gitignore and NOT uploaded to github, because it contains confidential information like my username and password.&lt;/p&gt;

&lt;p&gt;Putting your username and password directly in your code is of course very insecure. You need to install “dotenv” in your project, and the content of your .env file may look like this:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;DB_CONNECTION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mongodb+srv://username:password@cluster0-abc.mongodb.net/mycollection?retryWrites=true&amp;amp;w=majority&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;DB_CONNECTION is your connection string. Here, “mycollection” is the name of the collection you are connecting to, and you can see where you include your username and password. Change the collection name for each new project.  Mongo will create the new collection automatically, and you can check that it was made when you log into MongoDB Atlas and go to your collections. PORT was included here as well to define the port we want to use as port 3000.&lt;/p&gt;

&lt;p&gt;Here is an example connection string template from the &lt;a href=&quot;https://docs.mongodb.com/manual/reference/connection-string/&quot;&gt;MongoDB docs&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mongodb://[username:password@]host1[:port1][,...hostN[:portN]][/[defaultauthdb][?options]]

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;useful-commands&quot;&gt;Useful commands&lt;/h3&gt;

&lt;p&gt;Let’s say you have a database called “cat_app” with a collection called “cats”. You can interact with it using these commands in the mongo console.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;help
//actually prints all the commands you can use&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;show dbs
//will print names of your databases&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;use cat_app
//switches you to the cat_app database, prints out a message to confirm&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;show collections
//prints the collections in cat_app&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;db.cats.find()
//prints out all the cats in the cats collection
//can include data inside find() like find({breed: “whatever”}) to filter the data, finding all the cats of a particular breed&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;db.cats.insert({name: “Fluffy”})
//inserts data into the cats collection&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;db.cats.update()
//update data of a cat&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;db.cats.remove({breed: “whatever”})
//remove the cats of a particular breed&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="database" /><category term="node.js" /><category term="mongodb" /><category term="mongoose" /><summary type="html">I often feel I need to drill this information into my head a few times before I really get it, so here are some more notes with basic definitions surrounding databases.</summary></entry><entry><title type="html">500 server error and the csproj file</title><link href="http://localhost:4000/errors-csproj" rel="alternate" type="text/html" title="500 server error and the csproj file" /><published>2020-05-22T12:30:00-06:00</published><updated>2020-05-22T12:30:00-06:00</updated><id>http://localhost:4000/errors-csproj</id><content type="html" xml:base="http://localhost:4000/errors-csproj">&lt;p&gt;Here is what I learned when we got a 500 server error while testing my code at work.&lt;/p&gt;

&lt;p&gt;I was tasked to create a button that would copy rows of a list to another position in the list. We changed the functionality later on, but originally I created a button that opened a modal, which required user input to carry out the copy behavior. I created new javascript and cshtml files for the modal.&lt;/p&gt;

&lt;p&gt;I am still learning the ins and outs of Sourcetree, our version control software, but I knew that I had selected these files and pushed them to our main development branch. When the button was clicked during testing, a modal popped up, but its content was “500 server error”. I couldn’t understand why this would be, since I knew I pushed the modal files.&lt;/p&gt;

&lt;p&gt;Back in Visual Studio, I noticed that the new modal files were no longer showing up in solution explorer, but I could see them in file explorer on my PC. Plus I had the correct button functionality locally on my machine. It turns out there was one file that I never pushed, and that was the csproj file.&lt;/p&gt;

&lt;p&gt;I &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/web-forms/overview/deployment/web-deployment-in-the-enterprise/understanding-the-project-file&quot;&gt;learned that MSBuild&lt;/a&gt;, the engine that builds your solutions in .NET, uses the csproj file.  This file tells MSBuild that we are building a C# project and gives instructions for how to build it, like database server settings, platform requirements, and what files to include, among other things.&lt;/p&gt;

&lt;p&gt;The problem was with the “include” code, which looks like this:&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/*snipit from microsoft docs*/&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Content&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content\Custom.css&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Content&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CreateDatabase.sql&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Content&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DropDatabase.sql&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I never technically included the new files in the project, so the application didn’t know to look for them. Here are the steps taken to fix this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;if you can’t see your files in solution explorer, go to Project -&amp;gt; Show All Files&lt;/li&gt;
  &lt;li&gt;files should be visible now in solution explorer; right click -&amp;gt; “Include in Project”&lt;/li&gt;
  &lt;li&gt;you will see them included in .csproj file&lt;/li&gt;
  &lt;li&gt;commit this file in Sourcetree and push&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No more 500 error!&lt;/p&gt;</content><author><name></name></author><category term="csharp" /><category term="dotnet" /><summary type="html">Here is what I learned when we got a 500 server error while testing my code at work.</summary></entry><entry><title type="html">Reviewing API calls</title><link href="http://localhost:4000/api-review" rel="alternate" type="text/html" title="Reviewing API calls" /><published>2020-05-18T16:30:00-06:00</published><updated>2020-05-18T16:30:00-06:00</updated><id>http://localhost:4000/api-review</id><content type="html" xml:base="http://localhost:4000/api-review">&lt;p&gt;Today in my Web Developer course I am reviewing how to use APIs.&lt;/p&gt;

&lt;p&gt;This was a topic I really struggled with the first time around while in school.  I just couldn’t wrap my head around it. I think I struggled because javascript was still so new to me, and I could not seem to figure out how to get the data I needed from an API call.&lt;/p&gt;

&lt;p&gt;This time around it’s making a bit more sense, so here are some important points I picked up from the API section of this course, and a little explanation of the process of completing these exercises.&lt;/p&gt;

&lt;p&gt;For this exercise we needed to get the sunset time for Hawaii from a weather API. The course uses the yahoo weather API, but it has since been retired. I decided to use OpenWeather API, which I believe some of my classmates used for their API assignments back in the fall.&lt;/p&gt;

&lt;p&gt;To get started you need to sign up, and an API key will be generated for you. You can generate more API keys as needed. The docs explain how to make an API call. I decided to make my API call using the city ID, and all city IDs can be found in a downloadable JSON file.  I chose Lahaina, Maui.  The format for calling the API by city ID is as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;api.openweathermap.org/data/2.5/weather?id={city id}&amp;amp;appid={your api key}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see, you plug in the city ID and your API key.  My URL looked like this (note I have included a fake API key for privacy):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://api.openweathermap.org/data/2.5/weather?id=5849996&amp;amp;appid=12345abcde
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My course used the “request” package to handle requests in Node.js, however that package has since been deprecated. I used it for the exercise because it still works, though for a real project I would try to find something that is currently being updated and maintained.&lt;/p&gt;

&lt;p&gt;To test if you’re receiving data, the code looked like this:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.openweathermap.org/data/2.5/weather?id=5849996&amp;amp;appid=12345abcde&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statusCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, the data you get back in the console is actually a string. We can prove this by printing “typeof body” to the console. We need to access our data from a javascript object, not a string. All you need to do is use “JSON.parse(body)”:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.openweathermap.org/data/2.5/weather?id=5849996&amp;amp;appid=12345abcde&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statusCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, to get my sunset data. To know the structure of the JSON object I made the API request in the browser. In chrome I have an extension called JSON Viewer, which makes the JSON easier to read. This was the part of the JSON data I needed, to know how my sunset time was nested:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sys&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7875&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;country&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;sunrise&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1590335183&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;sunset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1590382873&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So I just need to get the data, in this case using the square bracket notation []:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.openweathermap.org/data/2.5/weather?id=5849996&amp;amp;appid=12345abcde&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statusCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sunset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sys&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sunset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sunset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, this just prints a long string of numbers, not a date. Checking the docs I can see that, when using a JSON object, it gives the time in unix format, which is basically the number of seconds that have passed since 00:00:00 UTC on 1 January 1970. The simplest seeming suggestion to parse this format on stack overflow was to use Moment.js.&lt;/p&gt;

&lt;p&gt;Once I figured out how to get an hour:minute format, I printed it to the console. But the time didn’t look right. If I am looking for the sunset in Lahaina, in May, it most likely wouldn’t be 22:58 - nearly 11pm! -  which is what my program told me. When I looked it up, it was in fact 18:59. This four hour difference is actually the time difference between Lahaina and my own timezone, MDT. Somehow I am getting the time that the sun sets in Lahaina, in MDT.  I had to dig in a bit more to find out why this was happening. Is it coming from my API, or from Moment.js?&lt;/p&gt;

&lt;p&gt;I ended up spending a few days away from this exercise, and came back with a fresher mind. After a couple searches I found that you need to include the city’s timezone hardcoded. Stack overflow suggested a method called utcOffset(). Hawaii’s timezone is GMT-10, so I plugged that into the method. You can also see how unix time was handled:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.openweathermap.org/data/2.5/weather?id=5849996&amp;amp;appid=12345abcde&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statusCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sunsetUnix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sys&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sunset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sunset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sunsetUnix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;utcOffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sunset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HH:mm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, this gave me the correct sunset time.&lt;/p&gt;

&lt;p&gt;I was glad I managed to figure this out, and that it wasn’t as difficult as I was expecting. I was almost ready to just move on with my course not having figured it out. Maybe it wouldn’t have mattered since this timezone issue doesn’t really have much to do with APIs. However, sticking with it until it was solved reminded me of two things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the importance of stepping away from the code when you are stuck; it gives your mind a rest and allows your subconscious to continue looking for creative ways to solve the problem&lt;/li&gt;
  &lt;li&gt;that (at least for my own personal projects) I can solve any problem if I set my mind to it&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="javascript" /><category term="node.js" /><category term="api" /><summary type="html">Today in my Web Developer course I am reviewing how to use APIs.</summary></entry><entry><title type="html">Notes on jQuery</title><link href="http://localhost:4000/jquery-notes" rel="alternate" type="text/html" title="Notes on jQuery" /><published>2020-04-20T21:30:00-06:00</published><updated>2020-04-20T21:30:00-06:00</updated><id>http://localhost:4000/jquery-notes</id><content type="html" xml:base="http://localhost:4000/jquery-notes">&lt;p&gt;I have seen jQuery all over the place, including at work, but I have never taken the time to learn it in depth.  I figured I needed to do this soon, and there happens to be a section in my current Web Developer Bootcamp Udemy course. Here are some of my notes.&lt;/p&gt;

&lt;p&gt;jQuery is a javascript library that helps us manipulate the DOM.&lt;/p&gt;

&lt;p&gt;Pros:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;shorter code, easier to access dom&lt;/li&gt;
  &lt;li&gt;cross-browser support&lt;/li&gt;
  &lt;li&gt;ajax&lt;/li&gt;
  &lt;li&gt;strong community&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;everything you can do with jQuery you can use without it&lt;/li&gt;
  &lt;li&gt;including lots of extra methods even if you are only using a couple, could have performance issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Two ways to include jQuery in your app:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;download code for jQuery, link to it in html file
    &lt;ul&gt;
      &lt;li&gt;there’s a full 9000 line file, and also a minified file&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;include CDN in html file
    &lt;ul&gt;
      &lt;li&gt;linking to jQuery file online rather than downloading it to your machine&lt;/li&gt;
      &lt;li&gt;slightly slower performance than having it locally&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure your jQuery libraries are included &lt;strong&gt;before&lt;/strong&gt; your own script files in your HTML. If you are depending on them in your own javascript file, they must be loaded first, otherwise your file can’t find the jQuery methods it is supposed to use.&lt;/p&gt;

&lt;h3 id=&quot;selecting-elements&quot;&gt;Selecting elements&lt;/h3&gt;

&lt;p&gt;Use the $ function to select things:  $()&lt;/p&gt;

&lt;p&gt;This is like using document.querySelectorAll() in vanilla JS. Inside the function use a CSS selector. This function returns all the elements that match the selector. e.g. $(“.someClass”);&lt;/p&gt;

&lt;h3 id=&quot;important-methods&quot;&gt;Important methods&lt;/h3&gt;

&lt;p&gt;For styling: $(selector).css(property, value)&lt;/p&gt;

&lt;p&gt;val(): to get value from an input, can also set the value&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;e.g. set the input’s value to an empty string to clear the input field&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;text(): gets text content in set of matched elements, and can set text content of an element&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;like textContent in vanilla javascript&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;attr(): get the value of an attribute for first matched element, set the value for all matched elements&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;e.g. to set,  $(#myPhoto).attr(“alt”, “Photo of my dog”);&lt;/li&gt;
  &lt;li&gt;can also set several attributes at once using a javascript object&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;html(): is like innerHTML in vanilla javascript, gets HTML content of first matched element or sets HTML content of all matched elements&lt;/p&gt;

&lt;p&gt;Below are like the classList properties in vanilla javascript:&lt;/p&gt;

&lt;p&gt;addClass(): add a class or classes to matched elements&lt;/p&gt;

&lt;p&gt;removeClass(): remove a class or classes to matched elements&lt;/p&gt;

&lt;p&gt;toggleClass(): add a class if the matched element doesn’t have it, removes a class if the element has it&lt;/p&gt;

&lt;p&gt;remove(): removes element from the DOM&lt;/p&gt;

&lt;h3 id=&quot;important-jquery-events&quot;&gt;Important jQuery events&lt;/h3&gt;

&lt;p&gt;click(): add a click listener to an element or colection of elements&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;callback function goes in the parentheses&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;keypress(): fires in between key being pressed down and coming back up&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;every key has its own code, access it with keyword “which”&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;input&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keypress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;you hit enter&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;keydown(): fired when key is pressed down&lt;/p&gt;

&lt;p&gt;keyup(): fired when a pressed key is released&lt;/p&gt;

&lt;p&gt;on(): most used jQuery event method&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;similar to vanilla js addEventListener,&lt;/li&gt;
  &lt;li&gt;used most of the time&lt;/li&gt;
  &lt;li&gt;include the type of event, and a callback function&lt;/li&gt;
  &lt;li&gt;adds listeners for all potential items that aren’t there when the page loads
    &lt;ul&gt;
      &lt;li&gt;“click”, on the other hand, only creates listeners for things that are on the page when it loads&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;button&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mouseenter&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;font-weight&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bold&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;this-in-jquery&quot;&gt;“this” in jQuery&lt;/h3&gt;

&lt;p&gt;In jQuery you need to wrap “this” in a jQuery selector, so it knows we’re using a jQuery object, like so:  $(this)&lt;/p&gt;

&lt;p&gt;If you use just plain this, like you would in vanilla javascript, it will not work.&lt;/p&gt;

&lt;h3 id=&quot;common-jquery-effects&quot;&gt;Common jQuery effects&lt;/h3&gt;

&lt;p&gt;fadeOut(): current opacity to transparent, can specify the speed&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;elements are hidden, not deleted&lt;/li&gt;
  &lt;li&gt;can include a callback function, because we often want something to happen &lt;em&gt;after&lt;/em&gt; the the fade has completed. If you include this in a separate line of code after fadeOut, it will execute right away, possibly before the fade is even complete&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;fadeIn(): similar to fadeOut&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;element should start out as display none; it gets changed to display block when you use the function&lt;/li&gt;
  &lt;li&gt;also include callback functions inside, for same reason as above fadeOut()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;fadeToggle(): will know if it needs to fade in or out depending if element is currently displayed&lt;/p&gt;

&lt;p&gt;slideDown(), slideUp(), slideToggle(): height of an element is animated as up or down&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;also have optional callback and ability to specify timing&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;parent-elements&quot;&gt;Parent elements&lt;/h3&gt;

&lt;h4 id=&quot;event-bubbling&quot;&gt;Event bubbling&lt;/h4&gt;

&lt;p&gt;If you have a click event on a particular element, it will bubble up into parent elements, triggering any click events on the parents.&lt;/p&gt;

&lt;p&gt;You can tell it not to bubble by adding the following to your click event:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;add “event” (or whatever keyword you choose) as an argument to your callback function&lt;/li&gt;
  &lt;li&gt;add a line inside your callback function: event.stopPropagation();&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;span&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;clicked on a span&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stopPropagation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;removing-parent-elements&quot;&gt;Removing parent elements&lt;/h4&gt;

&lt;p&gt;Quite simple, as per below:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;span&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stopPropagation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="javascript" /><category term="jquery" /><category term="dom" /><summary type="html">I have seen jQuery all over the place, including at work, but I have never taken the time to learn it in depth. I figured I needed to do this soon, and there happens to be a section in my current Web Developer Bootcamp Udemy course. Here are some of my notes.</summary></entry><entry><title type="html">Notes on the DOM</title><link href="http://localhost:4000/dom-notes" rel="alternate" type="text/html" title="Notes on the DOM" /><published>2020-04-19T11:30:00-06:00</published><updated>2020-04-19T11:30:00-06:00</updated><id>http://localhost:4000/dom-notes</id><content type="html" xml:base="http://localhost:4000/dom-notes">&lt;p&gt;I finished my .NET MVC Udemy course and have gone back to my Web Developer Bootcamp Udemy course that I started before going to school.&lt;/p&gt;

&lt;p&gt;I should have completed this before starting my program; it would have made life so much easier if I already had some exposure to these topics.&lt;/p&gt;

&lt;p&gt;The nice thing about completing this now, however, is that I’m breezing right through the content. It’s actually a really good opportunity to review the fundamentals, hear the content explained from another perspective, and pick up some new things I didn’t learn the first time around.&lt;/p&gt;

&lt;p&gt;Today I am working through the section on the DOM. The instructor is really good at highlighting and organizing the most important concepts, so I figured it would help me to make some notes here.&lt;/p&gt;

&lt;h3 id=&quot;important-dom-selector-methods&quot;&gt;Important DOM Selector Methods&lt;/h3&gt;

&lt;p&gt;These return HTML elements as &lt;em&gt;objects&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;document.getElementById()&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;pretty obvious, select the element with this id&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;document.getElementsByClassName()&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;returns a list of all elements with this class name&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;document.getElementsByTagName()&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;e.g. to select the body of a page use document.getElementsByTagName(“body”)[0];&lt;/li&gt;
  &lt;li&gt;I have tried using the TagName selector in the past but I could never get it to work. It was only when I saw the index of 0 ([0]) being used that I understood my problem&lt;/li&gt;
  &lt;li&gt;this selector returns all the elements in a &lt;em&gt;list&lt;/em&gt;, and I needed to select the first one - in the case of body, it’s the only one&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;document.querySelector()&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;important note!! only returns the &lt;em&gt;first element&lt;/em&gt; it comes across with this selector&lt;/li&gt;
  &lt;li&gt;can use any CSS selector you could use in a CSS file, like “.some-class h1”, using the same syntax you use in a CSS file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;document.querySelectorAll()&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;returns a list of elements that match the selector&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;important-ways-to-manipulate-the-dom&quot;&gt;Important ways to manipulate the DOM&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;changing the style of an element
    &lt;ul&gt;
      &lt;li&gt;can use the “&lt;strong&gt;style&lt;/strong&gt;” property in javascript&lt;/li&gt;
      &lt;li&gt;e.g. tag.style.border = “1px solid black”;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;add/remove classes with javascript
    &lt;ul&gt;
      &lt;li&gt;use javascript “&lt;strong&gt;classList&lt;/strong&gt;” property&lt;/li&gt;
      &lt;li&gt;classList.add, classList.remove, classList.toggle&lt;/li&gt;
      &lt;li&gt;classList is not technically an array&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;changing content of a tag
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;textContent&lt;/strong&gt; to extract and change the text inside an element, treats it like text&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;innerHtml&lt;/strong&gt;, however, maintains what’s inside the HTML, safer to use, treats it like HTML&lt;/li&gt;
      &lt;li&gt;these override what’s already inside the tag&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;changing tag attributes
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;getAttribute()&lt;/strong&gt; and &lt;strong&gt;setAttribute()&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;e.g. link.getAttribute(“href”);&lt;/li&gt;
      &lt;li&gt;e.g. link.setAttribute(“src”, “imgs/whatever.jpg”);&lt;/li&gt;
      &lt;li&gt;can even use to change an id or a class&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dom-events&quot;&gt;DOM events&lt;/h3&gt;

&lt;p&gt;Add event listeners to specific elements.&lt;/p&gt;

&lt;p&gt;Important method: &lt;strong&gt;addEventListener(type, functionToCall)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Type = type of event we’re listening for&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;“click” is a common one&lt;/li&gt;
  &lt;li&gt;“change” will fire whenever there is any sort of change, like typing into an input&lt;/li&gt;
  &lt;li&gt;“mouseover” for when you hover over an element&lt;/li&gt;
  &lt;li&gt;“mouseout” for when you move your mouse away from the element; can use with “mouseover” to create hover effect&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;functionToCall = callback function we want to run when event happens&lt;/p&gt;

&lt;h3 id=&quot;html-inputs-give-you-strings&quot;&gt;HTML inputs give you strings&lt;/h3&gt;

&lt;p&gt;Let’s say you want to use an input field for a number. Even if you input a number, and have the input type=”number”, the value you get will be a string. Like “7” instead of 7. Unless you are using a “==” and type coersion, javascript won’t be able to use this as a number.&lt;/p&gt;

&lt;p&gt;It took me a while to figure this out on my own, and it came up in my course.  The instructor’s solution for this was to place the input value inside the Number() method:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;winningScore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="javascript" /><category term="dom" /><summary type="html">I finished my .NET MVC Udemy course and have gone back to my Web Developer Bootcamp Udemy course that I started before going to school.</summary></entry><entry><title type="html">Last ditch effort – I deleted my database</title><link href="http://localhost:4000/deleting-my-database" rel="alternate" type="text/html" title="Last ditch effort – I deleted my database" /><published>2020-04-11T18:30:00-06:00</published><updated>2020-04-11T18:30:00-06:00</updated><id>http://localhost:4000/deleting-my-database</id><content type="html" xml:base="http://localhost:4000/deleting-my-database">&lt;p&gt;I have been working on my Udemy courses again, currently hoping to finish my MVC course.&lt;/p&gt;

&lt;p&gt;Sometimes I really don’t like .NET.  I’m not sure if it’s needlessly complicated or if I just need to learn more to help myself understand. I didn’t want to give up on my course though, because I’m sure it will be useful at my next job, or somewhere down the line.&lt;/p&gt;

&lt;p&gt;Since I was away from this course for a while I forgot where I was and some of what I had learned. I started a new section, followed all the instructions exactly, attempting to create a dropdown menu. Of course, none of the options showed up in the menu.&lt;/p&gt;

&lt;p&gt;The first thing I did was check the code for typos. There were none. I thought this was a mistake so I checked again, and compared it to the instructor’s code on github. Nope, still correct.&lt;/p&gt;

&lt;p&gt;Perhaps I made an error with the earlier exercises in the course. There were no review videos, and I had to use some of the code from github. This was necessary in order to have the same code as the instructor throughout the course.  If it was an error with my migrations, a topic I still don’t quite get, maybe the dropdown menu items just didn’t make it into my database.&lt;/p&gt;

&lt;p&gt;I’m also not yet an expert in SQL, so I just used the below query to check the table for my data:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TOP&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MembershipTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This showed me the rows that were in my table, and the menu items were there.&lt;/p&gt;

&lt;p&gt;At this point I spent about 2 days trying various things to fix the problem. I tried to simply update the database, using the update-database command in package manager console. Didn’t work. I realized some of my files may have been missing from the earlier exercises, so I added the code to my solution. Also didn’t help. I updated the DbContext to what I saw on the github code. Didn’t help, at least not immediately. After lots of experimenting and searching, I was ready to start a new solution and rebuild it from scratch, which meant having to watch a few hours of video again. It would maybe help solidify what I was learning but that was not ideal.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/16035333/how-to-delete-and-recreate-from-scratch-an-existing-ef-code-first-database&quot;&gt;Somewhere on Stack Overflow&lt;/a&gt; someone suggested to manually delete the database to start fresh. I decided to try this, but I did not follow their instructions exactly.&lt;/p&gt;

&lt;p&gt;Here are my steps:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;deleted the database connections in Server Explorer&lt;/li&gt;
  &lt;li&gt;deleted the database files under the App_Data folder in Solution Explorer&lt;/li&gt;
  &lt;li&gt;made a change in the code - I made change in one of the models and saved, but it didn’t matter what changed, just that something &lt;em&gt;had&lt;/em&gt; changed; this was important for the next step to work properly&lt;/li&gt;
  &lt;li&gt;added a new migration using “add-migration” in package manager console&lt;/li&gt;
  &lt;li&gt;then “update-database”&lt;/li&gt;
  &lt;li&gt;cleaned and built my solution again&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then I opened the page I had originally been working on.  The dropdown was now working properly and all menu items showed up!&lt;/p&gt;

&lt;p&gt;I can’t help but feel there is still going to be something wrong with my database, migrations, or project in general and it will come back to bite me later on. But for now I will continue on with the course and take this as a learning opportunity.&lt;/p&gt;</content><author><name></name></author><category term="dotnet" /><category term="database" /><category term="migrations" /><summary type="html">I have been working on my Udemy courses again, currently hoping to finish my MVC course.</summary></entry><entry><title type="html">New jekyll site part 3 - errors with deployment</title><link href="http://localhost:4000/new-jekyll-site-3" rel="alternate" type="text/html" title="New jekyll site part 3 - errors with deployment" /><published>2020-04-08T16:03:00-06:00</published><updated>2020-04-08T16:03:00-06:00</updated><id>http://localhost:4000/new-jekyll-site-3</id><content type="html" xml:base="http://localhost:4000/new-jekyll-site-3">&lt;p&gt;I made my changes to CSS without any more problems and I cleaned up my markdown files, as I mentioned last time. I figured now would be as good a time as any to deploy. I can keep adding posts and making small adjustments once deployed.&lt;/p&gt;

&lt;p&gt;Of course there have been errors with this as well. As expected.&lt;/p&gt;

&lt;p&gt;I created my github repo and pushed my code using command line. I used the following commands and this worked without errors:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;git init&lt;/li&gt;
  &lt;li&gt;git add .&lt;/li&gt;
  &lt;li&gt;git commit -m “first commit”&lt;/li&gt;
  &lt;li&gt;git remote add origin https://github.com/jchack1/julia-blog2.git&lt;/li&gt;
  &lt;li&gt;git push -u origin master&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I decided to deploy with Netlify, which is my go to for any deployment. It’s usually pretty straightforward, &lt;a href=&quot;https://www.netlify.com/blog/2015/10/28/a-step-by-step-guide-jekyll-3.0-on-netlify/&quot;&gt;and you can find the instructions for deploying Jekyll with Netlify here.&lt;/a&gt;  I selected my github repo and clicked deploy. After a few minutes I got an error, saying the build failed.&lt;/p&gt;

&lt;p&gt;That is because Netlify was looking for the _site folder.  I checked my files and I saw that I did not have this.  By now I’m getting pretty frustrated with this theme because it feels like there was a lot missing and unexplained. Why isn’t there a _site folder?&lt;/p&gt;

&lt;p&gt;I went to the &lt;a href=&quot;https://jekyllrb.com/docs/step-by-step/01-setup/&quot;&gt;Jekyll docs&lt;/a&gt; looking for any information about the _site folder.  I saw that when you use the command “jekyll build”, Jekyll builds the site and outputs it to a directory called _site, which is viewable in the browser at localhost:4000. I have used the “jekyll build” command many times so far, so I was unsure why it’s not in my files.  And why I was able to serve my site to localhost:4000.  I decided to see what would happen if I make a new Jekyll folder from scratch and run “jekyll build”. In my previous sites I always had a _site folder and never gave any thought to how it was created.&lt;/p&gt;

&lt;p&gt;This time I decided to just follow my old notes rather than just copy-paste from my theme. I went into the Jekyll folder I already have on my machine and opened command line. I used the following commands:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;jekyll new julia-blog3&lt;/li&gt;
  &lt;li&gt;cd julia-blog3&lt;/li&gt;
  &lt;li&gt;bundle exec jekyll build&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I watched the files in the folders and there it was. Once I used the jekyll build command, my _site folder appeared. Perhaps this was my mistake from the beginning. I never intiallized my folder properly.&lt;/p&gt;

&lt;p&gt;I decided to check both folders now, to see if I could either update my blog scripts to create the _site file, or if I’d need to copy everything over into my new folder. Whatever I tried in my old folder did not work, so I ended up copying everything over into my new folder. I set up gulp, which was really quick this time since I knew what I was doing. When I executed “bundle exec jekyll build” I now ended up with a _site folder, and it was filled with the proper files.&lt;/p&gt;

&lt;p&gt;Now I will upload this new folder to github and deploy. It should work now that I have a proper _site folder.&lt;/p&gt;

&lt;p&gt;I just have to remember to always “bundle exec jekyll build” and “bundle exec jekyll serve”(to generate files in _site folder) when I make changes. But only after I execute “gulp”. Hopefully I will quickly get used to this workflow.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="debugging" /><category term="deployment" /><summary type="html">I made my changes to CSS without any more problems and I cleaned up my markdown files, as I mentioned last time. I figured now would be as good a time as any to deploy. I can keep adding posts and making small adjustments once deployed.</summary></entry><entry><title type="html">C# definitions cheatsheet</title><link href="http://localhost:4000/csharpdefinitions" rel="alternate" type="text/html" title="C# definitions cheatsheet" /><published>2020-04-06T17:50:00-06:00</published><updated>2020-04-06T17:50:00-06:00</updated><id>http://localhost:4000/csharpdefinitions</id><content type="html" xml:base="http://localhost:4000/csharpdefinitions">&lt;p&gt;Here is some info I compiled as I worked my way through &lt;a href=&quot;https://www.codecademy.com/catalog/language/c-sharp&quot;&gt;Codecademy’s C# course&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I chose the codecademy course because I could work on it at my office during my practicum. My work computer wouldn’t play audio for some reason, so video tutorials weren’t an option while I was there. I also found the Microsoft documentation to be not very beginner friendly in its language, and it was the same with many other article style tutorials. The codecademy course was very beginner friendly and interactive so it held my attention better than just reading.&lt;/p&gt;

&lt;p&gt;That wasn’t an ad or anything, just wanted to share something I found genuinely helpful. Moving on to the definitions…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Class:&lt;/strong&gt; custom data type, defines info and methods &lt;br /&gt;
&lt;strong&gt;Object:&lt;/strong&gt; each &lt;em&gt;instance&lt;/em&gt; of a particular class&lt;/p&gt;

&lt;p&gt;We can make many instances of a class, each with unique values of their own&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fields:&lt;/strong&gt; pieces of data, like size and name&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;basically like variables&lt;/li&gt;
  &lt;li&gt;these start with a lowercase letter eg. name&lt;/li&gt;
  &lt;li&gt;fields can have different values in each object/instance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Class &lt;strong&gt;member&lt;/strong&gt;: a general term for the building blocks of a class&lt;/p&gt;

&lt;p&gt;Some default values in C#:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;string: null&lt;/li&gt;
  &lt;li&gt;int: 0&lt;/li&gt;
  &lt;li&gt;bool: false&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Properties:&lt;/strong&gt; control access to a field&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;another kind of class member&lt;/li&gt;
  &lt;li&gt;use the { get; } and { set; } methods&lt;/li&gt;
  &lt;li&gt;start with an uppercase letter eg. Name&lt;/li&gt;
  &lt;li&gt;inside the set method you can include validation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Access modifiers:&lt;/strong&gt; defines how a type or member can be accessed&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;public: can be accessed by ANY class&lt;/li&gt;
  &lt;li&gt;private: can only be accessed by code in the SAME class&lt;/li&gt;
  &lt;li&gt;protected: can be accessed by the current class and any class that inherits from it&lt;/li&gt;
  &lt;li&gt;override/virtual: override an inherited method. Use “override” in subclass, “virtual” in base class&lt;/li&gt;
  &lt;li&gt;abstract: use when there is no implementation in base class, but it must be in the subclass&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Methods:&lt;/strong&gt; actions an object can perform&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;if familiar with JavaScript, they are like functions&lt;/li&gt;
  &lt;li&gt;most belong to a class&lt;/li&gt;
  &lt;li&gt;define how an instance of the class behaves&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Constructor:&lt;/strong&gt; type of method that sets values of fields when you create a new instance. See below for an example of a constructor:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//define a constructor in your class&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//again, codecademy example&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Forest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;biome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//whatever values you input as parameters are assigned to the below properties&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Biome&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;biome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Age&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//age starts at 0 for all new forests&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Use the constructor with the &lt;strong&gt;“new”&lt;/strong&gt; keyword to make a new instance, as per below:&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Forest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Forest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//example from codecademy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In the above example, “Forest” is the type, “f” is the name of the new object/instance you are making, Forest(); is the constructor that makes the new instance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;this&lt;/strong&gt;: refers to the &lt;em&gt;current instance&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;it’s good to use this and be more explicit in your code; less chance for misinterpretation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Static:&lt;/strong&gt; information that is related to a class, but is not an instance of the class&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;something that applies to all instances and there should only be one value for the whole class&lt;/li&gt;
  &lt;li&gt;a static member is accessed from the class, not an instance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Forest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Definition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Overload:&lt;/strong&gt; two or more methods that have the same name, but different parameters&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Interfaces:&lt;/strong&gt; sets of properties, methods, and other members that tell us how a class can be used&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;helps check that we are using our types correctly&lt;/li&gt;
  &lt;li&gt;helps minimize bugs&lt;/li&gt;
  &lt;li&gt;doesn’t specify how they work, just that a class MUST have them&lt;/li&gt;
  &lt;li&gt;guarantee certain functionality across multiple classes&lt;/li&gt;
  &lt;li&gt;all start with “I”&lt;/li&gt;
  &lt;li&gt;the class must implement properties and methods in the interface&lt;/li&gt;
  &lt;li&gt;cannot specify constructors or fields&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Sedan&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IAutomobile&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//the interface says the sedan must have a &quot;Honk&quot; method, so we must include one in the sedan class&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//must be &quot;public&quot;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//interface doesn't care what &quot;Honk&quot; actually does &lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Inheritance:&lt;/strong&gt; a subclass/derived class inherits members of a superclass/base class&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Sedan&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vehicle&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//subclass Sedan inherits from base class Vehicle&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//must use &quot;:&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Both of the below are variables:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Reference types:&lt;/strong&gt; refer to a place in memory&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Value types:&lt;/strong&gt; hold actual data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Classes are reference types. When we create an instance of an object, and store it in a variable, it is a reference to the original object.&lt;/p&gt;

&lt;p&gt;It may seem obvious when written this way, but a “reference” is not an object, it is a &lt;em&gt;reference to&lt;/em&gt; an object.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Dissertation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diss1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Dissertation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//from codecademy&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//diss1 is a reference to the object Dissertation&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s all I have for now. As I continue going through my notes I will add to this post.&lt;/p&gt;</content><author><name></name></author><category term="csharp" /><summary type="html">Here is some info I compiled as I worked my way through Codecademy’s C# course.</summary></entry></feed>